#!/usr/bin/env python3

"""Not documented. :)
"""

import datetime
from lxml import etree as ET
import sys
import argparse
import json

from ixbrl_parse.ixbrl import parse, Entity, Period, Instant, Dimension

maxwidth=40

parser = argparse.ArgumentParser(
    description=__doc__
)
parser.add_argument('inputs', metavar='inputs', nargs=2,
                    help='Input files to compare')

# Parse arguments
args = parser.parse_args(sys.argv[1:])

tree1 = ET.parse(args.inputs[0])
tree2 = ET.parse(args.inputs[1])

i1 = parse(tree1)
i2 = parse(tree2)

indexes = {}

def compare(a, b, path=[]):

    b_map = {k.localname: v for k, v in b.values.items()}

    for name, value in a.values.items():

        if name.localname in b_map:
            vala = str(value.to_value().get_value())[:60]
            valb = str(b_map[name.localname].to_value().get_value())[:40]
            if vala != valb:
                print("At:")
                for p in path:
                    if isinstance(p, Entity):
                        print("  Entity %s (%s)" % (p.id, p.scheme))
                    elif isinstance(p, Period):
                        print("  Period %s - %s" % (p.start, p.end))
                    elif isinstance(p, Instant):
                        print("  Instant %s" % p.instant)
                    elif isinstance(p, Dimension):
                        print("  Dimension %s: %s" % (p.dimension, p.value))
                print("Fact %s:" % name.localname)
                print("  A: %s" % vala)
                print("  B: %s" % valb)
                print()

    for rel, ctxt in a.children.items():
        if rel in b.children:
            compare(a.children[rel], b.children[rel], path + [rel])

compare(i1.root, i2.root, [])

